name: CI

on:
  push:
    branches: master
  pull_request:
    branches: master
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 3 * * 6'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason'
        required: false
        default: 'Manual trigger'

jobs:
  Tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
          # You can add/remove combinations e.g. `dev` requirements or `postgresql13` by adding
          # a new item to the following lists.
          # You can see the complete list of services and versions that are available at:
          # https://docker-services-cli.readthedocs.io/en/latest/configuration.html
          python-version: [
            # 3.6,
            # 3.7,
            3.8,
            # 3.9
          ]
          requirements-level: [
            # min,
            pypi
          ]
          db-service: [
            postgresql9,
            # postgresql11,
            # mysql5,
            # mysql8
          ]
          search-service: [
            # elasticsearch6,
            elasticsearch7
          ]
          e2e: [no]

          # exclude:
          # Add combinations to this list that should be excluded from the final
          # build. Doing this will help keeping the number of jobs down.
          # E.g. removing 3.8 - min combination will avoid 8 jobs to be submited
          # [3.8] * [min] * [postgresql9, postgresql11, mysql5, mysql8] * [elasticsearch6, elasticsearch7]
          # - python-version: 3.8
          #   requirements-level: min

          # - python-version: 3.9
          #   requirements-level: min

          # - db-service: postgresql11
          #   python-version: 3.6

          # - db-service: mysql8
          #   python-version: 3.6

          # - search-service: elasticsearch7
          #   python-version: 3.6

          # - search-service: elasticsearch6
          #   db-service: postgresql11

          # - search-service: elasticsearch6
          #   db-service: mysql8

          # - search-service: elasticsearch7
          #   db-service: postgresql9

          # - search-service: elasticsearch7
          #   db-service: mysql5

          include:
          - db-service: postgresql9
            DB: postgresql
            DB_EXTRAS: "postgresql"

          # - db-service: postgresql11
          #   DB: postgresql
          #   DB_EXTRAS: "postgresql"

          # - db-service: mysql5
          #   DB: mysql
          #   DB_EXTRAS: "mysql"

          # - db-service: mysql8
          #   DB: mysql
          #   DB_EXTRAS: "mysql"

          # - search-service: elasticsearch6
          #   COOKIECUTTER_ELASTICSEARCH: 6
          #   SEARCH_EXTRAS: "elasticsearch6"

          - search-service: elasticsearch7
            COOKIECUTTER_ELASTICSEARCH: 7
            SEARCH_EXTRAS: "elasticsearch7"

          # - search-service: elasticsearch7
          #   db-service: mysql5
          #   E2E: yes

          - search-service: elasticsearch7
            python-version: 3.8
            requirements-level: pypi
            db-service: postgresql9
            E2E: yes

    env:
      CACHE: ${{ matrix.cache-service }}
      DB: ${{ matrix.db-service }}
      MQ: ${{ matrix.mq-service }}
      SEARCH: ${{ matrix.search-service }}
      # TODO: Adapt EXTRAS accordingly
      EXTRAS: all,${{ matrix.DB_EXTRAS }},${{ matrix.SEARCH_EXTRAS }}
      # Cookiecutter configuration
      COOKIECUTTER_DATABASE: ${{ matrix.DB }}
      COOKIECUTTER_ELASTICSEARCH: ${{ matrix.COOKIECUTTER_ELASTICSEARCH }}
      # Force pipenv to create a new virtualenv to bypass travis virtualenv.
      PIPENV_IGNORE_VIRTUALENVS: 1
      PIPENV_PYUP_API_KEY: ""
      # E2E tests config
      # Print screenshots to console output
      E2E_OUTPUT: base64
      # Enable end-to-end tests
      E2E: no

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.${{ matrix.requirements-level }}-${{ matrix.python-version }}-requirements.txt') }}

      - name: Install dependencies
        run: |
          if [ ${E2E} == 'yes' ] && [ ! -f $HOME/webdrivers/chromedriver ]; then wget https://chromedriver.storage.googleapis.com/2.31/chromedriver_linux64.zip -P $HOME/webdrivers; unzip -d $HOME/webdrivers $HOME/webdrivers/chromedriver_linux64.zip; fi
          pip install --upgrade pip setuptools py pipenv
          pip install cookiecutter twine wheel coveralls sphinx

      - name: Run tests
        run: |
          export DISPLAY=:99.0
          if [ ${E2E} == 'yes' ]; then sh -e /etc/init.d/xvfb start; sleep 3; fi
          ./run-tests.sh
